{"version":3,"sources":["color.js"],"names":["Color","r","g","b","average","toFixed","Math","floor","max","random"],"mappings":";AAkDC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlDKA,IAAAA,EAkDL,WAjDeC,SAAAA,EAAAA,EAAGC,EAAGC,GAAG,EAAA,KAAA,GACZF,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,EAAIA,EACJC,KAAAA,QAAU,GA6CtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,WA1Cc,MAAA,WACO,MAAA,OAAA,OAAA,KAAKH,EAAEI,QAAQ,GAAM,KAAA,OAAA,KAAKH,EAAEG,QAAQ,GAAM,KAAA,OAAA,KAAKF,EAAEE,QAAQ,GAAvE,OAyCP,CAAA,IAAA,UAtCa,MAAA,WACDJ,KAAAA,EAAI,EACJC,KAAAA,EAAI,EACJC,KAAAA,EAAI,IAmChB,CAAA,IAAA,UAhCa,MAAA,WACDF,KAAAA,EAAI,IACJC,KAAAA,EAAI,IACJC,KAAAA,EAAI,MA6BhB,CAAA,IAAA,eA1BkB,MAAA,WACNC,KAAAA,SAAW,KAAKH,EAAI,KAAKC,EAAI,KAAKC,GAAK,IAyBnD,CAAA,IAAA,cAtBiB,MAAA,WACLF,KAAAA,EAAI,KAAKG,QACTF,KAAAA,EAAI,KAAKE,QACTD,KAAAA,EAAI,KAAKC,UAmBrB,CAAA,IAAA,SAfY,MAAA,WACAH,KAAAA,EAAI,IAAM,KAAKA,EACfC,KAAAA,EAAI,IAAM,KAAKA,EACfC,KAAAA,EAAI,IAAM,KAAKA,IAY3B,CAAA,IAAA,SARY,MAAA,WAGAF,KAAAA,EAAIK,KAAKC,MAAuBC,IAAjBF,KAAKG,UAFb,EAGPP,KAAAA,EAAII,KAAKC,MAAuBC,IAAjBF,KAAKG,UAHb,EAIPN,KAAAA,EAAIG,KAAKC,MAAuBC,IAAjBF,KAAKG,UAJb,MAOnB,EAAA","file":"color.38177dfe.js","sourceRoot":"..","sourcesContent":["class Color {\n    constructor(r, g, b) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.average = '';\n    };\n\n    toString() {\n        return `rgb(${this.r.toFixed(0)},${this.g.toFixed(0)},${this.b.toFixed(0)})`\n    };\n\n    toBlack() {\n        this.r = 0;\n        this.g = 0;\n        this.b = 0;\n    };\n\n    toWhite() {\n        this.r = 255;\n        this.g = 255;\n        this.b = 255;\n    };\n\n    getLightness() {\n        this.average = (this.r + this.g + this.b) / 3;\n    }\n\n    toGreyscale() {\n        this.r = this.average;\n        this.g = this.average;\n        this.b = this.average;\n\n    }\n\n    invert() {\n        this.r = 255 - this.r;\n        this.g = 255 - this.g;\n        this.b = 255 - this.b;\n\n    }\n\n    random() {\n        const min = 0;\n        const max = 255;\n        this.r = Math.floor(Math.random() * (max - min)) + min;\n        this.g = Math.floor(Math.random() * (max - min)) + min;\n        this.b = Math.floor(Math.random() * (max - min)) + min;\n    }\n\n};\n\n"]}